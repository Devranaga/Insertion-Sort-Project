Binary Search Tree (BST).

Verilen dizi: [7, 5, 1, 8, 3, 6, 0, 9, 4, 2]

**Aşamalar:**

1. **7 root olarak seçilir:** İlk eleman olan 7, ağacın kökü (root) olur.
   ```
        7
   ```
2. **5 eklenir:** 5, 7'den küçük olduğu için 7'nin sol çocuğu olur.
   ```
        7
       /
      5
   ```
3. **1 eklenir:** 1, 7'den ve 5'ten küçük olduğu için 5'in sol çocuğu olur.
   ```
        7
       /
      5
     /
    1
   ```
4. **8 eklenir:** 8, 7'den büyük olduğu için 7'nin sağ çocuğu olur.
   ```
        7
       / \
      5   8
     /
    1
   ```
5. **3 eklenir:** 3, 7'den küçük ve 5'ten küçük olduğu için 1'in sağ çocuğu olur.
   ```
        7
       / \
      5   8
     /
    1
     \
      3
   ```
6. **6 eklenir:** 6, 7'den küçük ve 5'ten büyük olduğu için 5'in sağ çocuğu olur.
   ```
        7
       / \
      5   8
     / \
    1   6
     \
      3
   ```
7. **0 eklenir:** 0, 7'den, 5'ten ve 1'den küçük olduğu için 1'in sol çocuğu olur.
   ```
        7
       / \
      5   8
     / \
    1   6
   / \
  0   3
   ```
8. **9 eklenir:** 9, 7'den ve 8'den büyük olduğu için 8'in sağ çocuğu olur.
   ```
        7
       / \
      5   8
     / \   \
    1   6   9
   / \
  0   3
   ```
9. **4 eklenir:** 4, 7'den küçük, 5'ten küçük ve 1'den büyük olduğu için 3'ün sağ çocuğu olur.
   ```
        7
       / \
      5   8
     / \   \
    1   6   9
   / \
  0   3
       \
        4
   ```
10. **2 eklenir:** 2, 7'den küçük, 5'ten küçük, 1'den büyük ve 3'ten küçük olduğu için 3'ün sol çocuğu olur.
   ```
        7
       / \
      5   8
     / \   \
    1   6   9
   / \
  0   3
     / \
    2   4 
   ```
**Sonuç:**

Oluşan Binary Search Tree yukarıdaki gibidir.
